      <div className={`w-full bg-gradient-to-t from-ngc1 to-ngc2 ${divClassName}`} >
        <div className="navbarContent lg:px-44 md:px-30 sm:px-10 px-4 max-sm:py-2  mt-2 flex sm:justify-between max-sm:justify-between gap-5 sm:gap-8  max-sm:relative">
          <div className="sm:hidden">
            <img
              className="max-sm:w-[100px] h-12"
              src="	https://www.easyhaionline.com/assets/images/logo.svg"
              alt=""
            />
          </div>

          <div ref={navRef} className="links max-sm:bg-gradient-to-t from-ngc1 to-ngc2 max-sm:w-full flex max-sm:flex-col gap-8 max-sm:px-5 max-sm:pb-20 py-5 max-sm:absolute max-sm:left-[-700px]">
            <div className="flex items-center sm:hidden justify-between px-15">

              <img
                className="w-36 h-12 sm:hidden"
                src="	https://www.easyhaionline.com/assets/images/logo.svg"
                alt=""
              />

              <button onClick={toggleNav} className="">
                <HambergerIconsCross className="bg-white" />
              </button>

            </div>


            <div className="max-sm:px-5 max-sm:w-full">
              <Link href="/" className="text-white font-medium flex items-center justify-between max-sm:border-b-[1px] max-sm:pb-2">
                <p> HOME</p>
              </Link>
            </div>

            <div className="max-sm:px-5 max-sm:w-full relative group">
              <Link href="/" className="text-white  font-medium flex items-center justify-between max-sm:border-b-[1px] max-sm:pb-2">
                <p>COURSE</p><DropDownIcon />
              </Link>
              <div className={`h-48 w-40 bg-black absolute z-10  max-sm:w-[88%] hidden group-hover:block max-sm:group-hover:hidden`}></div>
            </div>

            <div className="max-sm:px-5 max-sm:w-full relative group">
              <Link href="/" className="text-white  font-medium flex items-center justify-between max-sm:border-b-[1px] max-sm:pb-2">
                <p className="text-base max-sm:text-[16px]">STUDY MATERIAL</p><DropDownIcon />
              </Link>
              <div className={`h-48 w-40 bg-black absolute z-10 max-sm:w-[88%] hidden group-hover:block max-sm:group-hover:hidden`}></div>
            </div>

            <div className="max-sm:px-5 max-sm:w-full sm:max-xl:hidden relative group">
              <Link href="/" className="text-white font-medium flex items-center justify-between max-sm:border-b-[1px] max-sm:pb-2">
                <p>BLOGS</p>
                <DropDownIcon />
              </Link>
              <div className={`h-48 w-40 bg-black absolute max-sm:w-[88%] z-10 hidden group-hover:block max-sm:group-hover:hidden`}></div>
            </div>


            <div className="max-sm:px-5 max-sm:w-full sm:max-xl:hidden">
              <Link href="/" className="text-white font-medium flex items-center justify-between max-sm:border-b-[1px] max-sm:pb-2">
                <p>LIVE LECTURE</p>
              </Link>
            </div>

            <div className="max-sm:px-5 max-sm:w-full sm:max-2xl:hidden">
              <Link href="/" className="text-white font-medium flex items-center justify-between max-sm:border-b-[1px] max-sm:pb-2">
                <p>INTERACTIVE LECTURE</p>
              </Link>
            </div>

            <div className="max-sm:px-5 flex justify-end sm:hidden">
              <button className="sm:hidden bg-white p-3 rounded-md px-4 my-2">
                <CallIconMobile className="bg-white p-5 py-5" />
              </button>
            </div>
          </div>

          <div className="flex gap-3">
            <div className="flex gap-4 max-sm:hidden">
              <input
                href="/"
                className={`items-center gap-0.5 bg-white my-2 px-4 md:w-52 rounded-md outline-none ${toggleSearch ? "flex" : "hidden"
                  } `}
                placeholder="Search"
                ref={searchRef}
                // focus={toggleSearch}
                onBlur={(e) => { console.log(e.target.value.length); setToggleSearch(false); }}
              ></input>
              <button
                href="/"
                className={`items-center gap-0.5 bg-white my-2 px-4 rounded-md ${toggleSearch ? "hidden" : "flex"} max-sm:px-2 max-sm:py-1`}
                onClick={() => {
                  setToggleSearch(!toggleSearch)
                  setTimeout(() => {
                    searchRef?.current?.focus()
                  }, 10);
                }}
              >
                <MagnifyingGlass className="" />
              </button>

              <Link
                href="/"
                className="items-center flex gap-0.5 bg-white my-2 px-6 rounded-md max-md:hidden"
              >
                <LoginIcon className="" />
                <div>
                  <p className="font-bold">Login / Register</p>
                </div>
              </Link>
            </div>

            <button onClick={toggleNav} className="sm:hidden px-4 rounded-md max-sm:px-2 max-sm:py-1">
              <HambergerIcons />
            </button>
          </div>
        </div>
      </div>













                  {/* {
              DataBase.map(value => {
                return <>
                  <div className="max-sm:px-5 max-sm:w-full relative group/item">
                    <Link href="/" className="text-white  font-medium flex items-center justify-between max-sm:border-b-[1px] max-sm:pb-2">
                      <p className="uppercase text-[14px]">{value.title}</p>
                      <div>{value.children && value.children.length ? <DropDownIcon /> : ""}</div>
                    </Link>
                    <div className={`bg-slate-300 rounded absolute z-10 py-3 px-5 max-sm:w-[88%] hidden ${value.children && value.children.length ? "group-hover/item:block" : ""} max-sm:group-hover:hidden flex gap-5`}>
                      {
                        value.children && value.children.length ? value.children.map(res => {
                          return <>
                            <div className="max-sm:px-5 max-sm:w-full relative group/edit">
                              <Link href="/" className="flex items-center justify-between max-sm:border-b-[1px] max-sm:pb-2">
                                <p className="uppercase text-[14px]">{res.title}</p>
                                <div>{res.children && res.children.length ? <NestedDropDownIcon /> : ""}</div>
                              </Link>
                              <div className={`bg-slate-300 rounded absolute right-[-150px] z-10 py-3 px-5 max-sm:w-[88%] hidden ${res.children && res.children.length ? "group-hover/edit:block" : ""} max-sm:group-hover:hidden flex gap-5`}>
                                {
                                  res.children && res.children.length ? res.children.map(curr => {
                                    return <>
                                      <div className="max-sm:px-5 max-sm:w-full relative group/child">
                                        <Link href="/" className="flex items-center justify-between max-sm:border-b-[1px] max-sm:pb-2">
                                          <p className="uppercase text-[14px]">{curr.title}</p>
                                          <div>{curr.children && curr.children.length ? <NestedDropDownIcon /> : ""}</div>
                                        </Link>
                                        <div className={`bg-slate-300 rounded absolute right-[-150px] z-10 py-3 px-5 max-sm:w-[88%] hidden ${curr.children && curr.children.length ? "group-hover/child:block" : ""} max-sm:group-hover:hidden flex gap-5`}>
                                          {
                                            curr.children && curr.children.length ? curr.children.map(currChild => {
                                              return <>
                                                <div>
                                                  {currChild.title}
                                                </div>
                                              </>
                                            }
                                            ) : ""
                                          }
                                        </div>
                                      </div>
                                    </>
                                  }
                                  ) : ""
                                }
                              </div>
                            </div>
                          </>
                        }
                        ) : ""
                      }
                    </div>
                  </div>
                </>
              })
            } */}



























* {
  box-sizing: border-box;
}

.responsive-nav {
  left: 0 !important;
}